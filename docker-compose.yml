services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: ecommerce-sqlserver
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=StrongPassword123!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - ecommerce-network
    restart: always

  # User Service
  user-service:
    build:
      context: .
      dockerfile: src/Services/UserService/Dockerfile
    container_name: ecommerce-user-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ECommerceUserDb;User Id=sa;Password=StrongPassword123!;TrustServerCertificate=true;MultipleActiveResultSets=true;ConnectRetryCount=10;ConnectRetryInterval=5
    ports:
      - "5003:8080"
    depends_on:
      - sqlserver
    networks:
      ecommerce-network:
        aliases:
          - user-service
    restart: unless-stopped

  # Kong API Gateway
  kong:
    image: kong:latest
    container_name: ecommerce-kong
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
    volumes:
      - ./kong.yml:/etc/kong/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    networks:
      - ecommerce-network
    restart: unless-stopped

volumes:
  sqlserver_data:

networks:
  ecommerce-network:
    driver: bridge
